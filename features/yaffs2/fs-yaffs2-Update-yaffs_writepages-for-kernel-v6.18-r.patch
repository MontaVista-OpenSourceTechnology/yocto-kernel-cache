From cfabeaeca39dfe7845d8712bd6accc0360cd85fb Mon Sep 17 00:00:00 2001
From: Bruce Ashfield <bruce.ashfield@gmail.com>
Date: Wed, 15 Oct 2025 18:31:46 -0400
Subject: [PATCH 1/3] fs/yaffs2: Update yaffs_writepages for kernel v6.18-rc1

The `write_cache_pages` function has been removed in kernel v6.18-rc1,
leading to an implicit function declaration error in yaffs2.

This commit updates `yaffs_writepages` to use `writeback_iter` for
iterating over folios, which is the new standard for handling writeback
operations in the kernel. The existing `yaffs_writepage_wrapper` is
retained to adapt the folio to the page-based `yaffs_writepage`
function. This ensures compatibility with the updated kernel API.

Signed-off-by: Bruce Ashfield <bruce.ashfield@gmail.com>
---
 fs/yaffs2/yaffs_vfs.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/fs/yaffs2/yaffs_vfs.c b/fs/yaffs2/yaffs_vfs.c
index 4bb18ea6f86f..022a26cb817f 100644
--- a/fs/yaffs2/yaffs_vfs.c
+++ b/fs/yaffs2/yaffs_vfs.c
@@ -526,7 +526,18 @@ static int yaffs_writepage_wrapper(struct folio *folio, struct writeback_control
 
 static int yaffs_writepages(struct address_space *mapping, struct writeback_control *wbc)
 {
-    return write_cache_pages(mapping, wbc, yaffs_writepage_wrapper, NULL);
+    struct folio *folio = NULL;
+    int ret = 0;
+    int error = 0;
+
+    while ((folio = writeback_iter(mapping, wbc, folio, &error))) {
+        ret = yaffs_writepage_wrapper(folio, wbc, NULL);
+        if (ret < 0) {
+            error = ret;
+        }
+    }
+
+    return error;
 }
 
 /* Space holding and freeing is done to ensure we have space available for write_begin/end */
-- 
2.39.2

